@foreach (var usg in Model.Usings)
{
@:using @usg;
}

namespace @Model.Namespace;
public class AggregateSpecification<T, TId> : Specification<T, TId>
    where T : IBaseEntity<TId>
{
    private Expression<Func<T, bool>> _aggregateExpression;

    public AggregateSpecification()
    {
        _aggregateExpression = new TrueSpecification<T, TId>().Expression;
    }

    public AggregateSpecification<T, TId> And(Specification<T, TId> spec)
    {
        _aggregateExpression = _aggregateExpression.And(spec.Expression);
        return this;
    }

    public AggregateSpecification<T, TId> Or(Specification<T, TId> spec)
    {
        _aggregateExpression = _aggregateExpression.Or(spec.Expression);
        return this;
    }

    public override Expression<Func<T, bool>> Expression => _aggregateExpression;
}
